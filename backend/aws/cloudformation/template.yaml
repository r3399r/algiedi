AWSTemplateFormatVersion: '2010-09-09'
Transform: "AWS::Serverless-2016-10-31"
Description: gotron deployment cloudformation script
    
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
      Timeout: 30  # in seconds
Parameters:
  Project:
    Type: String
  TargetEnvr:
    Type: String
  Domain:
    Type: String
Conditions: 
  IsProd: !Equals [ !Ref TargetEnvr, prod ]
Resources:
  ##########################################
  ##### AWS IAM Role to execute lambda #####
  ##########################################
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub ${Project}-${TargetEnvr}-lambda-execution-role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
        - arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
  ##############################################
  ##### RESTful API and associated Lambdas #####
  ##############################################
  ServerlessApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${TargetEnvr}
      EndpointConfiguration: REGIONAL
      DefinitionBody: {
          "openapi": "3.0.1",
          "info": {
            "version": "2020-01-06T07:45:41Z",
            "title": !Sub "${Project}-${TargetEnvr}-api"
          },
          "paths": {
            "/api/me": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/putMe"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/view/{id}": {
              "patch": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/me/exhibits/published": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/me/exhibits/original": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/me/exhibits/inspiration": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/me/exhibits/likes": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/me/exhibits/follows": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/creation/{id}/like": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/creation/{id}/unlike": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/creation/{id}/comment": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/postCreationComment"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/explore": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/auth": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/user": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/user/auth": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/featured": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/search": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/{id}": {
              "get": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/{id}/auth": {
              "get": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/user/{id}": {
              "get": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/explore/user/{id}/auth": {
              "get": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/project": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/project/{id}": {
              "put": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/putProject"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/start": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/original": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/postProjectIdOriginal"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/approval/{uid}": {
              "put": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                },{
                  "name": "uid",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/ready": {
              "put": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/view": {
              "patch": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/publish": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/cover": {
              "put": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/putProjectIdCover"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/project/{id}/chat": {
              "get": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/sns/contact": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/postSnsContact"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/sns/subscribe": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/postSnsSubscribe"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/upload": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/postUpload"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/upload/{id}": {
              "put": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/putUploadId"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/user": {
              "patch": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/putUser"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/user/avatar": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/putUserAvatar"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate body, query string parameters, and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/user/{id}/follow": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/user/{id}/unfollow": {
              "post": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              }
            },
            "/api/notification": {
              "get": {
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/notification/{id}": {
              "delete": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            },
            "/api/notification/{id}/read": {
              "patch": {
                "parameters": [{
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "schema": {"type": "string"}
                      }
                    },
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/Empty"
                        }
                      }
                    }
                  }
                },
                "security": [{"cognito": []}],
                "x-amazon-apigateway-request-validator" : "Validate query string parameters and headers",
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-lambda/invocations",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "passthroughBehavior": "when_no_match",
                  "contentHandling": "CONVERT_TO_TEXT"
                }
              },
            }
          },
          "securityDefinitions": {
            "cognito": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "cognito_user_pools",
              "x-amazon-apigateway-authorizer": {
                "providerARNs": [
                  Fn::ImportValue: !Sub '${Project}-${TargetEnvr}-cognito-user-pool-arn'
                ],
                "type": "cognito_user_pools"
              }
            }
          },
          "definitions": {
            "Empty": {
              "type": "object",
              "title": "Empty Schema"
            },
            "postSnsContact": {
              "type": "object",
              "properties": {
                "firstName": {"type": "string"},
                "surname": {"type": "string"},
                "email":{"type": "string"},
                "message":{"type": "string"}
              },
              "required": ["firstName","surname","email","message"]
            },
            "postSnsSubscribe": {
              "type": "object",
              "properties": {
                "email":{"type": "string"},
              },
              "required": ["email"]
            },
            "postCreationComment": {
              "type": "object",
              "properties": {
                "comment": {"type": "string"}
              }
            },
            "putProject": {
              "type": "object",
              "properties": {
                "name": {"type": "string"},
                "description": {"type": "string"},
                "theme":{"type": "string"},
                "genre":{"type": "string"},
                "language":{"type": "string"},
                "caption":{
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            },
            "postProjectIdOriginal": {
              "type": "object",
              "properties": {
                "type":{"type": "string"},
              },
              "required": ["type"]
            },
            "postUpload": {
              "type": "object",
              "properties": {
                "type":{"type": "string"},
                "name": {"type": "string"},
                "description": {"type": "string"},
                "theme":{"type": "string"},
                "genre":{"type": "string"},
                "language":{"type": "string"},
                "caption":{
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": ["type","name","description","theme","genre","language"]
            },
            "putUploadId": {
              "type": "object",
              "properties": {
                "type":{"type": "string"},
              },
              "required": ["type"]
            },
            "putProjectIdCover": {
              "type": "object",
              "properties": {
                "file": {"type": "string"}
              },
              "required": ["file"]
            },
            "putUser": {
              "type": "object",
              "properties": {
                "role": {"type": "string"},
                "language": {"type": "string"},
                "instrument":{"type": "string"},
                "favoriate":{"type": "string"}
              },
              "required": ["role","language","instrument","favoriate"]
            },
            "putUserAvatar": {
              "type": "object",
              "properties": {
                "file": {"type": "string"}
              },
              "required": ["file"]
            },
            "putMe": {
              "type": "object",
              "properties": {
                "role": {"type": "string"},
                "language": {"type": "string"},
                "bio":{"type": "string"},
                "age":{"type": "string"},
                "tag":{"type": "string"},
                "facebook":{"type": "string"},
                "instagram":{"type": "string"},
                "youtube":{"type": "string"},
                "soundcloud":{"type": "string"}
              }
            }
          },
          "x-amazon-apigateway-request-validators" : {
            "Validate body, query string parameters, and headers" : {
              "validateRequestParameters" : true,
              "validateRequestBody" : true
            },
            "Validate query string parameters and headers" : {
              "validateRequestParameters" : true,
              "validateRequestBody" : false
            }
          }
        }
  LambdaApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures: [arm64]
      Handler: index.api
      Runtime: nodejs18.x
      FunctionName: !Sub ${Project}-${TargetEnvr}-lambda
      Role: !GetAtt ExecutionRole.Arn
      CodeUri: ../../lib/src
      MemorySize: 256
      Layers: [!Ref LambdaLayer]
      Environment:
        Variables:
          PROJECT: !Sub ${Project}
          ENVR: !Sub ${TargetEnvr}
          SNS_CONTACT_TOPIC_ARN: !Ref ContactUsSNSTopic
          SNS_SUBSCRIBE_TOPIC_ARN: !Ref SubscribeNewsletterSNSTopic
          USER_POOL_ID:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-cognito-user-pool-id
          WS_ENDPOINT: !Sub ${WebsocketApi}.execute-api.${AWS::Region}.amazonaws.com/socket
          DB_ENDPOINT:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-endpoint
          DB_PORT:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-port
          DB_USERNAME:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-username
          DB_PASSWORD: !Sub '{{resolve:ssm:${Project}-${TargetEnvr}-db-pwd}}'
  InvokePermissionLambdaApi:
    Type: AWS::Lambda::Permission
    DependsOn: [ServerlessApi, LambdaApiFunction]
    Properties:
      FunctionName: !Sub ${Project}-${TargetEnvr}-lambda
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessApi}/*
  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub ${Project}-${TargetEnvr}-layer
      CompatibleArchitectures: [arm64]
      CompatibleRuntimes: [nodejs18.x]
      ContentUri: ../../dist
      RetentionPolicy: Delete
  ###################################
  ##### Cognito related Lambdas #####
  ###################################
  LambdaCognitoMessage:
    Type: AWS::Serverless::Function
    Properties:
      Architectures: [arm64]
      Handler: index.message
      Runtime: nodejs18.x
      FunctionName: !Sub ${Project}-${TargetEnvr}-message
      Role: !GetAtt ExecutionRole.Arn
      CodeUri: ../../lib/src
      MemorySize: 128
      Layers: [!Ref LambdaLayer]
      Environment:
        Variables:
          ENVR: !Sub ${TargetEnvr}
          DOMAIN: !Sub ${Domain}
  InvokePermissionCognitoMessage:
    Type: AWS::Lambda::Permission
    DependsOn: [LambdaCognitoMessage]
    Properties:
      FunctionName: !Sub ${Project}-${TargetEnvr}-message
      Action: 'lambda:InvokeFunction'
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-cognito-user-pool-arn
  LambdaCognitoSignup:
    Type: AWS::Serverless::Function
    Properties:
      Architectures: [arm64]
      Handler: index.signup
      Runtime: nodejs18.x
      FunctionName: !Sub ${Project}-${TargetEnvr}-signup
      Role: !GetAtt ExecutionRole.Arn
      CodeUri: ../../lib/src
      MemorySize: 128
      Layers: [!Ref LambdaLayer]
      Environment:
        Variables:
          PROJECT: !Sub ${Project}
          ENVR: !Sub ${TargetEnvr}
          DB_ENDPOINT:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-endpoint
          DB_PORT:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-port
          DB_USERNAME:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-username
          DB_PASSWORD: !Sub '{{resolve:ssm:${Project}-${TargetEnvr}-db-pwd}}'
  InvokePermissionCognitoSignup:
    Type: AWS::Lambda::Permission
    DependsOn: [LambdaCognitoSignup]
    Properties:
      FunctionName: !Sub ${Project}-${TargetEnvr}-signup
      Action: 'lambda:InvokeFunction'
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-cognito-user-pool-arn
  ################################################
  ##### Websocket API and associated Lambdas #####
  ################################################
  WebsocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${Project}-${TargetEnvr}-ws"
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
  RouteConnect:
    Type: AWS::ApiGatewayV2::Route
    DependsOn: [WebsocketIntegration]
    Properties:
      ApiId: !Ref WebsocketApi
      RouteKey: $connect
      Target: !Sub integrations/${WebsocketIntegration}
  RouteDisconnect:
    Type: AWS::ApiGatewayV2::Route
    DependsOn: [WebsocketIntegration]
    Properties:
      ApiId: !Ref WebsocketApi
      RouteKey: $disconnect
      Target: !Sub integrations/${WebsocketIntegration}
  RouteDefault:
    Type: AWS::ApiGatewayV2::Route
    DependsOn: [WebsocketIntegration]
    Properties:
      ApiId: !Ref WebsocketApi
      RouteKey: $default
      Target: !Sub integrations/${WebsocketIntegration}
  RouteChat:
    Type: AWS::ApiGatewayV2::Route
    DependsOn: [WebsocketIntegration]
    Properties:
      ApiId: !Ref WebsocketApi
      RouteKey: chat
      Target: !Sub integrations/${WebsocketIntegration}
  RoutePing:
    Type: AWS::ApiGatewayV2::Route
    DependsOn: [WebsocketIntegration]
    Properties:
      ApiId: !Ref WebsocketApi
      RouteKey: ping
      Target: !Sub integrations/${WebsocketIntegration}
  WebsocketIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebsocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Project}-${TargetEnvr}-ws/invocations"
  WebsocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn: [RouteConnect, RouteDisconnect, RouteDefault, RouteChat, RoutePing]
    Properties:
      ApiId: !Ref WebsocketApi
  WebsocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebsocketApi
      StageName: socket
      DeploymentId: !Ref WebsocketDeployment
  LambdaWs:
    Type: AWS::Serverless::Function
    Properties:
      Architectures: [arm64]
      Handler: index.ws
      Runtime: nodejs18.x
      FunctionName: !Sub ${Project}-${TargetEnvr}-ws
      Role: !GetAtt ExecutionRole.Arn
      CodeUri: ../../lib/src
      MemorySize: 256
      Layers: [!Ref LambdaLayer]
      Environment:
        Variables:
          PROJECT: !Sub ${Project}
          ENVR: !Sub ${TargetEnvr}
          WS_ENDPOINT: !Sub ${WebsocketApi}.execute-api.${AWS::Region}.amazonaws.com/socket
          DB_ENDPOINT:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-endpoint
          DB_PORT:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-port
          DB_USERNAME:
            Fn::ImportValue: !Sub ${Project}-${TargetEnvr}-db-username
          DB_PASSWORD: !Sub '{{resolve:ssm:${Project}-${TargetEnvr}-db-pwd}}'
  InvokePermissionWs:
    Type: AWS::Lambda::Permission
    DependsOn: [WebsocketApi, LambdaWs]
    Properties:
      FunctionName: !Sub ${Project}-${TargetEnvr}-ws
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketApi}/*
  #########################################
  ##### Cloudfront and Route53 config #####
  #########################################
  WebSocketOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Name: !Sub ${Project}-${TargetEnvr}-OriginPolicy
        CookiesConfig:
          CookieBehavior: none
        QueryStringsConfig:
          QueryStringBehavior: all
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - Sec-WebSocket-Key
            - Sec-WebSocket-Version
            - Sec-WebSocket-Protocol
            - Sec-WebSocket-Accept
            - Sec-WebSocket-Extensions
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: [ServerlessApi, S3Bucket]
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Select [1, !Split ["//", !GetAtt S3Bucket.WebsiteURL]]
          Id: S3-hosted-website-ID
          CustomOriginConfig:
            OriginProtocolPolicy: http-only
        - DomainName: !Sub '${ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com'
          Id: !Sub ${Project}-${TargetEnvr}-ApiEndpoint-ID
          OriginPath: !Sub /${TargetEnvr}
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginKeepaliveTimeout: 5
            OriginProtocolPolicy: https-only
        - DomainName: !Sub '${WebsocketApi}.execute-api.${AWS::Region}.amazonaws.com'
          Id: !Sub ${Project}-${TargetEnvr}-WebsocketApi-ID
          CustomOriginConfig:
            HTTPSPort: 443
            OriginProtocolPolicy: https-only
            OriginSSLProtocols: [TLSv1]
        Enabled: 'true'
        HttpVersion: http2
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods: [ "GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          TargetOriginId: S3-hosted-website-ID
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
        CacheBehaviors:
        - PathPattern: /api/*
          AllowedMethods: [ "GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
          ForwardedValues:
            Headers: [ "Authorization", "Accept" ]
            QueryString: true
          TargetOriginId: !Sub ${Project}-${TargetEnvr}-ApiEndpoint-ID
          ViewerProtocolPolicy: redirect-to-https
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
        - PathPattern: socket
          AllowedMethods: [ "GET", "HEAD" ]
          Compress: true
          TargetOriginId: !Sub ${Project}-${TargetEnvr}-WebsocketApi-ID
          ViewerProtocolPolicy: allow-all
          OriginRequestPolicyId: !Ref WebSocketOriginRequestPolicy
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # AWS managed CachingDisabled policy
        PriceClass: PriceClass_200
  ####################################
  ##### S3 Bucket and its policy #####
  ####################################
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Project}-${TargetEnvr}
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: [S3Bucket]
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument: !Join
      - ''
      - - '{
            "Version": "2012-10-17",
            "Id": "PolicyForCloudFrontPrivateContent",
            "Statement": [
                {
                    "Sid": "Allow-OAI-Access-To-Bucket",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": "'
        - !GetAtt S3Bucket.Arn
        - '/*"
                }
            ]
          }'
  S3BucketStorage:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Project}-${TargetEnvr}-storage
  #######################################
  ##### SNS Topic and Subscriptions #####
  #######################################
  ContactUsSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${Project}-${TargetEnvr}-contact-us-topic
      Subscription:
        - Endpoint: gotronmusic@gmail.com
          Protocol: email
      TopicName: !Sub ${Project}-${TargetEnvr}-contact-us-topic
  SubscribeNewsletterSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${Project}-${TargetEnvr}-subscribe-newsletter-topic
      Subscription:
        - Endpoint: gotronmusic@gmail.com
          Protocol: email
      TopicName: !Sub ${Project}-${TargetEnvr}-ubscribe-newsletter-topic